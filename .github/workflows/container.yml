# Container Build and Push to GitHub Container Registry
# This workflow builds and pushes Docker images to ghcr.io for version tags only
name: Container

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.1.0, etc.
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile'
      - 'docker-compose*.yml'
      - '.github/workflows/container.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build and push container image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
        labels: |
          org.opencontainers.image.title=RangeDB
          org.opencontainers.image.description=A distributed key-value database with multi-raft consensus
          org.opencontainers.image.url=https://github.com/SamInTheShell/rangekey
          org.opencontainers.image.source=https://github.com/SamInTheShell/rangekey
          org.opencontainers.image.documentation=https://github.com/SamInTheShell/rangekey/blob/main/README.md

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test container image
      if: github.event_name == 'pull_request'
      run: |
        # Build image for testing
        docker build -t rangedb-test .
        
        # Test that the binary works
        docker run --rm rangedb-test rangedb --help
        
        # Test version command
        docker run --rm rangedb-test rangedb version || echo "Version command not available"