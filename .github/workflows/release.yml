# Automated Binary Builds and GitHub Releases
# This workflow builds RangeDB binaries for multiple platforms and creates GitHub releases
name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.1.0, etc.
  release:
    types: [published]

permissions:
  contents: write    # Required for creating releases and uploading assets  
  actions: read      # Required for downloading artifacts
  id-token: write    # Required for OIDC authentication (if used)

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Get full history for version info

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.5'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get version
      id: version
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Build for all platforms
      run: |
        echo "Building RangeDB binaries for all platforms..."
        make build-all

    - name: Create release archives
      run: |
        echo "Creating release archives..."
        mkdir -p dist/release
        
        # Create archives with version info
        VERSION=${{ steps.version.outputs.VERSION }}
        
        # Linux x64
        tar -czf dist/release/rangedb-${VERSION}-linux-amd64.tar.gz -C dist/linux rangedb
        
        # macOS x64
        tar -czf dist/release/rangedb-${VERSION}-darwin-amd64.tar.gz -C dist/darwin rangedb
        
        # Windows x64
        zip -j dist/release/rangedb-${VERSION}-windows-amd64.zip dist/windows/rangedb.exe

    - name: Generate checksums
      run: |
        cd dist/release
        sha256sum *.tar.gz *.zip > checksums.txt
        cat checksums.txt

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: |
          dist/release/*.tar.gz
          dist/release/*.zip
          dist/release/checksums.txt

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: binaries
        path: dist/release

    - name: Get version
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "RELEASE_NAME=RangeDB ${VERSION}" >> $GITHUB_OUTPUT
        echo "Debug: GITHUB_REF=${GITHUB_REF}"
        echo "Debug: VERSION=${VERSION}"

    - name: Generate release notes
      id: release_notes
      run: |
        VERSION=${{ steps.version.outputs.VERSION }}
        cat > release_notes.md << 'EOF'
        # RangeDB ${{ steps.version.outputs.VERSION }}

        ## What's New
        
        This release includes pre-built binaries for Linux, macOS, and Windows.

        ## Installation

        ### Linux (x64)
        ```bash
        wget https://github.com/SamInTheShell/rangekey/releases/download/${VERSION}/rangedb-${VERSION}-linux-amd64.tar.gz
        tar -xzf rangedb-${VERSION}-linux-amd64.tar.gz
        chmod +x rangedb
        ./rangedb --help
        ```

        ### macOS (x64)
        ```bash
        wget https://github.com/SamInTheShell/rangekey/releases/download/${VERSION}/rangedb-${VERSION}-darwin-amd64.tar.gz
        tar -xzf rangedb-${VERSION}-darwin-amd64.tar.gz
        chmod +x rangedb
        ./rangedb --help
        ```

        ### Windows (x64)
        Download `rangedb-${VERSION}-windows-amd64.zip` and extract the executable.

        ## Quick Start

        ```bash
        # Start a single node cluster
        ./rangedb server --cluster-init

        # In another terminal, try some operations
        ./rangedb put /user/123 '{"name": "John", "email": "john@example.com"}'
        ./rangedb get /user/123
        ./rangedb range /user/ /user/z
        ```

        ## Binary Verification

        All binaries are provided with SHA256 checksums. Download `checksums.txt` to verify:

        ```bash
        sha256sum -c checksums.txt
        ```

        ## Full Documentation

        See the [README](https://github.com/SamInTheShell/rangekey/blob/main/README.md) for complete documentation.
        EOF

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ steps.version.outputs.RELEASE_NAME }}
        body_path: release_notes.md
        files: |
          dist/release/rangedb-${{ steps.version.outputs.VERSION }}-linux-amd64.tar.gz
          dist/release/rangedb-${{ steps.version.outputs.VERSION }}-darwin-amd64.tar.gz
          dist/release/rangedb-${{ steps.version.outputs.VERSION }}-windows-amd64.zip
          dist/release/checksums.txt
        draft: false
        prerelease: false
        fail_on_unmatched_files: true
        generate_release_notes: true
        token: ${{ secrets.GITHUB_TOKEN }}